/*
 * BSD 2-Clause License
 *
 * Copyright (c) 2021, Riley McGee
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package com.wastedbankspace.model.locations;

import com.wastedbankspace.model.StorableItem;
import lombok.Getter;
import net.runelite.api.ItemID;

@Getter
public enum MagicWardrobe implements StorableItem {
    AMYS_SAW(ItemID.AMYS_SAW, true),
    AMYS_SAW_OFFHAND(ItemID.AMYS_SAW_OFFHAND, true),
    ANCESTRAL_HAT(ItemID.ANCESTRAL_HAT, true),
    ANCESTRAL_ROBE_BOTTOM(ItemID.ANCESTRAL_ROBE_BOTTOM, true),
    ANCESTRAL_ROBE_TOP(ItemID.ANCESTRAL_ROBE_TOP, true),
    TWISTED_ANCESTRAL_HAT(ItemID.TWISTED_ANCESTRAL_HAT, true),
    TWISTED_ANCESTRAL_ROBE_BOTTOM(ItemID.TWISTED_ANCESTRAL_ROBE_BOTTOM, true),
    TWISTED_ANCESTRAL_ROBE_TOP(ItemID.TWISTED_ANCESTRAL_ROBE_TOP, true),
    BLOODBARK_BODY(ItemID.BLOODBARK_BODY),
    BLOODBARK_BOOTS(ItemID.BLOODBARK_BOOTS),
    BLOODBARK_HELM(ItemID.BLOODBARK_HELM),
    BLOODBARK_LEGS(ItemID.BLOODBARK_LEGS),
    BLOODBARK_GAUNTLETS(ItemID.BLOODBARK_GAUNTLETS),
    BOUNTY_HUNTER_HAT_TIER_1(ItemID.BOUNTY_HUNTER_HAT_TIER_1),
    BOUNTY_HUNTER_HAT_TIER_2(ItemID.BOUNTY_HUNTER_HAT_TIER_2),
    BOUNTY_HUNTER_HAT_TIER_3(ItemID.BOUNTY_HUNTER_HAT_TIER_3),
    BOUNTY_HUNTER_HAT_TIER_4(ItemID.BOUNTY_HUNTER_HAT_TIER_4),
    BOUNTY_HUNTER_HAT_TIER_5(ItemID.BOUNTY_HUNTER_HAT_TIER_5),
    BOUNTY_HUNTER_HAT_TIER_6(ItemID.BOUNTY_HUNTER_HAT_TIER_6),
    BRUMA_TORCH(ItemID.BRUMA_TORCH),
    CARPENTERS_BOOTS(ItemID.CARPENTERS_BOOTS),
    CARPENTERS_HELMET(ItemID.CARPENTERS_HELMET),
    CARPENTERS_SHIRT(ItemID.CARPENTERS_SHIRT),
    CARPENTERS_TROUSERS(ItemID.CARPENTERS_TROUSERS),
    DAGONHAI_HAT(ItemID.DAGONHAI_HAT),
    DAGONHAI_ROBE_TOP(ItemID.DAGONHAI_ROBE_TOP),
    DAGONHAI_ROBE_BOTTOM(ItemID.DAGONHAI_ROBE_BOTTOM),
    DARK_FLIPPERS_MAGIC_WARDROBE(ItemID.DARK_FLIPPERS),
    ELDER_CHAOS_HOOD(ItemID.ELDER_CHAOS_HOOD),
    ELDER_CHAOS_ROBE(ItemID.ELDER_CHAOS_ROBE),
    ELDER_CHAOS_TOP(ItemID.ELDER_CHAOS_TOP),
    EVIL_CHICKEN_FEET(ItemID.EVIL_CHICKEN_FEET),
    EVIL_CHICKEN_HEAD(ItemID.EVIL_CHICKEN_HEAD),
    EVIL_CHICKEN_LEGS(ItemID.EVIL_CHICKEN_LEGS),
    EVIL_CHICKEN_WINGS(ItemID.EVIL_CHICKEN_WINGS),
    FISH_SACK(ItemID.BRONZE_FIST_FLAG),
    CUTTHROAT_FLAG(ItemID.CUTTHROAT_FLAG),
    GILDED_SMILE_FLAG(ItemID.GILDED_SMILE_FLAG),
    LUCKY_SHOT_FLAG(ItemID.LUCKY_SHOT_FLAG),
    PHASMATYS_FLAG(ItemID.PHASMATYS_FLAG),
    GHOSTLY_BOOTS(ItemID.GHOSTLY_BOOTS),
    GHOSTLY_CLOAK(ItemID.GHOSTLY_CLOAK),
    GHOSTLY_HOOD(ItemID.GHOSTLY_HOOD),
    GHOSTLY_ROBE(ItemID.GHOSTLY_ROBE),
    GHOSTLY_GLOVES(ItemID.GHOSTLY_GLOVES),
    GHOSTLY_ROBE_6108(ItemID.GHOSTLY_ROBE_6108),
    //GRACEFUL
    IMCANDO_HAMMER(ItemID.IMCANDO_HAMMER, true),
    IMCANDO_HAMMER_OFFHAND(ItemID.IMCANDO_HAMMER_OFFHAND, true),
    INFINITY_BOOTS(ItemID.INFINITY_BOOTS),
    INFINITY_BOTTOMS(ItemID.INFINITY_BOTTOMS),
    INFINITY_HAT(ItemID.INFINITY_HAT),
    INFINITY_TOP(ItemID.INFINITY_TOP),
    INFINITY_GLOVES(ItemID.INFINITY_GLOVES),
    DARK_INFINITY_BOTTOMS(ItemID.DARK_INFINITY_BOTTOMS),
    DARK_INFINITY_HAT(ItemID.DARK_INFINITY_HAT),
    DARK_INFINITY_TOP(ItemID.DARK_INFINITY_TOP),
    LIGHT_INFINITY_BOTTOMS(ItemID.LIGHT_INFINITY_BOTTOMS),
    LIGHT_INFINITY_HAT(ItemID.LIGHT_INFINITY_HAT),
    LIGHT_INFINITY_TOP(ItemID.LIGHT_INFINITY_TOP),
    LUNAR_HELM(ItemID.LUNAR_HELM),
    LUNAR_CAPE(ItemID.LUNAR_CAPE),
    LUNAR_AMULET(ItemID.LUNAR_AMULET),
    LUNAR_BOOTS(ItemID.LUNAR_BOOTS),
    LUNAR_GLOVES(ItemID.LUNAR_GLOVES),
    LUNAR_LEGS(ItemID.LUNAR_LEGS),
    LUNAR_RING(ItemID.LUNAR_RING),
    LUNAR_TORSO(ItemID.LUNAR_TORSO),
    MOONCLAN_HELM(ItemID.MOONCLAN_HELM),
    MOONCLAN_CAPE(ItemID.MOONCLAN_CAPE),
    MOONCLAN_BOOTS(ItemID.MOONCLAN_BOOTS),
    MOONCLAN_GLOVES(ItemID.MOONCLAN_GLOVES),
    MOONCLAN_ARMOUR(ItemID.MOONCLAN_ARMOUR),
    MOONCLAN_SKIRT(ItemID.MOONCLAN_SKIRT),
    MUDSKIPPER_HAT(ItemID.MUDSKIPPER_HAT),
    FLIPPERS_MAGIC_WARDROBE(ItemID.FLIPPERS),
    MYSTIC_BOOTS(ItemID.MYSTIC_BOOTS),
    MYSTIC_HAT(ItemID.MYSTIC_HAT),
    MYSTIC_ROBE_BOTTOM(ItemID.MYSTIC_ROBE_BOTTOM),
    MYSTIC_ROBE_TOP(ItemID.MYSTIC_ROBE_TOP),
    MYSTIC_GLOVES(ItemID.MYSTIC_GLOVES),
    MYSTIC_BOOTS_DARK(ItemID.MYSTIC_BOOTS_DARK),
    MYSTIC_HAT_DARK(ItemID.MYSTIC_HAT_DARK),
    MYSTIC_ROBE_BOTTOM_DARK(ItemID.MYSTIC_ROBE_BOTTOM_DARK),
    MYSTIC_ROBE_TOP_DARK(ItemID.MYSTIC_ROBE_TOP_DARK),
    MYSTIC_GLOVES_DARK(ItemID.MYSTIC_GLOVES_DARK),
    MYSTIC_BOOTS_LIGHT(ItemID.MYSTIC_BOOTS_LIGHT),
    MYSTIC_HAT_LIGHT(ItemID.MYSTIC_HAT_LIGHT),
    MYSTIC_ROBE_BOTTOM_LIGHT(ItemID.MYSTIC_ROBE_BOTTOM_LIGHT),
    MYSTIC_ROBE_TOP_LIGHT(ItemID.MYSTIC_ROBE_TOP_LIGHT),
    MYSTIC_GLOVES_LIGHT(ItemID.MYSTIC_GLOVES_LIGHT),
    MYSTIC_BOOTS_DUSK(ItemID.MYSTIC_BOOTS_DUSK),
    MYSTIC_HAT_DUSK(ItemID.MYSTIC_HAT_DUSK),
    MYSTIC_ROBE_BOTTOM_DUSK(ItemID.MYSTIC_ROBE_BOTTOM_DUSK),
    MYSTIC_ROBE_TOP_DUSK(ItemID.MYSTIC_ROBE_TOP_DUSK),
    MYSTIC_GLOVES_DUSK(ItemID.MYSTIC_GLOVES_DUSK),
    MYSTIC_BOOTS_OR(ItemID.MYSTIC_BOOTS_OR),
    MYSTIC_HAT_OR(ItemID.MYSTIC_HAT_OR),
    MYSTIC_ROBE_BOTTOM_OR(ItemID.MYSTIC_ROBE_BOTTOM_OR),
    MYSTIC_ROBE_TOP_OR(ItemID.MYSTIC_ROBE_TOP_OR),
    MYSTIC_GLOVES_OR(ItemID.MYSTIC_GLOVES_OR),
    BLACK_NAVAL_SHIRT(ItemID.BLACK_NAVAL_SHIRT),
    BLACK_NAVY_SLACKS(ItemID.BLACK_NAVY_SLACKS),
    BLACK_TRICORN_HAT(ItemID.BLACK_TRICORN_HAT),
    BLUE_NAVAL_SHIRT(ItemID.BLUE_NAVAL_SHIRT),
    BLUE_NAVY_SLACKS(ItemID.BLUE_NAVY_SLACKS),
    BLUE_TRICORN_HAT(ItemID.BLUE_TRICORN_HAT),
    BROWN_NAVAL_SHIRT(ItemID.BROWN_NAVAL_SHIRT),
    BROWN_NAVY_SLACKS(ItemID.BROWN_NAVY_SLACKS),
    BROWN_TRICORN_HAT(ItemID.BROWN_TRICORN_HAT),
    GREEN_NAVAL_SHIRT(ItemID.GREEN_NAVAL_SHIRT),
    GREEN_NAVY_SLACKS(ItemID.GREEN_NAVY_SLACKS),
    GREEN_TRICORN_HAT(ItemID.GREEN_TRICORN_HAT),
    GREY_NAVAL_SHIRT(ItemID.GREY_NAVAL_SHIRT),
    GREY_NAVY_SLACKS(ItemID.GREY_NAVY_SLACKS),
    GREY_TRICORN_HAT(ItemID.GREY_TRICORN_HAT),
    PURPLE_NAVAL_SHIRT(ItemID.PURPLE_NAVAL_SHIRT),
    PURPLE_NAVY_SLACKS(ItemID.PURPLE_NAVY_SLACKS),
    PURPLE_TRICORN_HAT(ItemID.PURPLE_TRICORN_HAT),
    RED_NAVAL_SHIRT(ItemID.RED_NAVAL_SHIRT),
    RED_NAVY_SLACKS(ItemID.RED_NAVY_SLACKS),
    RED_TRICORN_HAT(ItemID.RED_TRICORN_HAT),
    OILY_PEARL_FISHING_ROD_MAGIC_WARDROBE(ItemID.OILY_PEARL_FISHING_ROD),
    PEARL_BARBARIAN_ROD_MAGIC_WARDROBE(ItemID.PEARL_BARBARIAN_ROD),
    PEARL_FISHING_ROD_MAGIC_WARDROBE(ItemID.PEARL_FISHING_ROD),
    PEARL_FLY_FISHING_ROD_MAGIC_WARDROBE(ItemID.PEARL_FLY_FISHING_ROD),
    PYROMANCER_BOOTS(ItemID.PYROMANCER_BOOTS),
    PYROMANCER_GARB(ItemID.PYROMANCER_GARB),
    PYROMANCER_HOOD(ItemID.PYROMANCER_HOOD),
    PYROMANCER_ROBE(ItemID.PYROMANCER_ROBE),
    SKELETAL_HELM(ItemID.SKELETAL_HELM),
    SKELETAL_BOTTOMS(ItemID.SKELETAL_BOTTOMS),
    SKELETAL_BOOTS(ItemID.SKELETAL_BOOTS),
    SKELETAL_GLOVES(ItemID.SKELETAL_GLOVES),
    SKELETAL_TOP(ItemID.SKELETAL_TOP),
    SMITHS_TUNIC(ItemID.SMITHS_TUNIC),
    SMITHS_TROUSERS(ItemID.SMITHS_TROUSERS),
    SMITHS_GLOVES(ItemID.SMITHS_GLOVES),
    SMITHS_GLOVES_I(ItemID.SMITHS_GLOVES_I),
    SMITHS_BOOTS(ItemID.SMITHS_BOOTS),
    SPLITBARK_BODY(ItemID.SPLITBARK_BODY),
    SPLITBARK_BOOTS(ItemID.SPLITBARK_BOOTS),
    SPLITBARK_HELM(ItemID.SPLITBARK_HELM),
    SPLITBARK_LEGS(ItemID.SPLITBARK_LEGS),
    SPLITBARK_GAUNTLETS(ItemID.SPLITBARK_GAUNTLETS),
    SWAMPBARK_BODY(ItemID.SWAMPBARK_BODY),
    SWAMPBARK_BOOTS(ItemID.SWAMPBARK_BOOTS),
    SWAMPBARK_HELM(ItemID.SWAMPBARK_HELM),
    SWAMPBARK_LEGS(ItemID.SWAMPBARK_LEGS),
    SWAMPBARK_GAUNTLETS(ItemID.SWAMPBARK_GAUNTLETS),
    VILLAGER_ARMBAND(ItemID.VILLAGER_ARMBAND),
    VILLAGER_ARMBAND_6359(ItemID.VILLAGER_ARMBAND_6359),
    VILLAGER_ARMBAND_6369(ItemID.VILLAGER_ARMBAND_6369),
    VILLAGER_ARMBAND_6379(ItemID.VILLAGER_ARMBAND_6379),
    VILLAGER_HAT(ItemID.VILLAGER_HAT),
    VILLAGER_HAT_6355(ItemID.VILLAGER_HAT_6355),
    VILLAGER_HAT_6365(ItemID.VILLAGER_HAT_6365),
    VILLAGER_HAT_6375(ItemID.VILLAGER_HAT_6375),
    VILLAGER_ROBE(ItemID.VILLAGER_ROBE),
    VILLAGER_ROBE_6353(ItemID.VILLAGER_ROBE_6353),
    VILLAGER_ROBE_6363(ItemID.VILLAGER_ROBE_6363),
    VILLAGER_ROBE_6373(ItemID.VILLAGER_ROBE_6373),
    VILLAGER_SANDALS(ItemID.VILLAGER_SANDALS),
    VILLAGER_SANDALS_6357(ItemID.VILLAGER_SANDALS_6357),
    VILLAGER_SANDALS_6367(ItemID.VILLAGER_SANDALS_6367),
    VILLAGER_SANDALS_6377(ItemID.VILLAGER_SANDALS_6377),
    TRIBAL_TOP(ItemID.TRIBAL_TOP),
    TRIBAL_TOP_6351(ItemID.TRIBAL_TOP_6351),
    TRIBAL_TOP_6361(ItemID.TRIBAL_TOP_6361),
    TRIBAL_TOP_6371(ItemID.TRIBAL_TOP_6371),
    WARM_GLOVES(ItemID.WARM_GLOVES),
    ZEALOTS_BOOTS(ItemID.ZEALOTS_BOOTS),
    ZEALOTS_HELM(ItemID.ZEALOTS_HELM),
    ZEALOTS_ROBE_BOTTOM(ItemID.ZEALOTS_ROBE_BOTTOM),
    ZEALOTS_ROBE_TOP(ItemID.ZEALOTS_ROBE_TOP),
    HOOD_OF_RUIN(ItemID.HOOD_OF_RUIN),
    ROBE_TOP_OF_RUIN(ItemID.ROBE_TOP_OF_RUIN),
    ROBE_BOTTOM_OF_RUIN(ItemID.ROBE_BOTTOM_OF_RUIN),
    GLOVES_OF_RUIN(ItemID.GLOVES_OF_RUIN),
    SOCKS_OF_RUIN(ItemID.SOCKS_OF_RUIN),
    CLOAK_OF_RUIN(ItemID.CLOAK_OF_RUIN),
    HAT_OF_THE_EYE(ItemID.HAT_OF_THE_EYE),
    ROBE_TOP_OF_THE_EYE(ItemID.ROBE_TOP_OF_THE_EYE),
    ROBE_BOTTOMS_OF_THE_EYE(ItemID.ROBE_BOTTOMS_OF_THE_EYE),
    BOOTS_OF_THE_EYE(ItemID.BOOTS_OF_THE_EYE),
    HAT_OF_THE_EYE_BLUE(ItemID.HAT_OF_THE_EYE_BLUE),
    ROBE_TOP_OF_THE_EYE_BLUE(ItemID.ROBE_TOP_OF_THE_EYE_BLUE),
    ROBE_BOTTOMS_OF_THE_EYE_BLUE(ItemID.ROBE_BOTTOMS_OF_THE_EYE_BLUE),
    HAT_OF_THE_EYE_RED(ItemID.HAT_OF_THE_EYE_RED),
    ROBE_TOP_OF_THE_EYE_RED(ItemID.ROBE_TOP_OF_THE_EYE_RED),
    ROBE_BOTTOMS_OF_THE_EYE_RED(ItemID.ROBE_BOTTOMS_OF_THE_EYE_RED),
    HAT_OF_THE_EYE_GREEN(ItemID.HAT_OF_THE_EYE_GREEN),
    ROBE_TOP_OF_THE_EYE_GREEN(ItemID.ROBE_TOP_OF_THE_EYE_GREEN),
    ROBE_BOTTOMS_OF_THE_EYE_GREEN(ItemID.ROBE_BOTTOMS_OF_THE_EYE_GREEN),
    PHEASANT_HAT(ItemID.PHEASANT_HAT),
    PHEASANT_CAPE(ItemID.PHEASANT_CAPE),
    PHEASANT_LEGS(ItemID.PHEASANT_LEGS),
    PHEASANT_BOOTS(ItemID.PHEASANT_BOOTS),
    LOG_BASKET(ItemID.LOG_BASKET, true),
    FORESTRY_KIT(ItemID.FORESTRY_KIT, true),
    VIRTUS_MASK(ItemID.VIRTUS_MASK, true),
    VIRTUS_ROBE_BOTTOM(ItemID.VIRTUS_ROBE_BOTTOM, true),
    VIRTUS_ROBE_TOP(ItemID.VIRTUS_ROBE_TOP, true),
    DARK_SQUALL_HOOD(ItemID.DARK_SQUALL_HOOD),
    DARK_SQUALL_ROBE_TOP(ItemID.DARK_SQUALL_ROBE_TOP),
    DARK_SQUALL_ROBE_BOTTOM(ItemID.DARK_SQUALL_ROBE_BOTTOM),
    EMISSARY_HOOD(ItemID.EMISSARY_HOOD),
    EMISSARY_ROBE_TOP(ItemID.EMISSARY_ROBE_TOP),
    EMISSARY_ROBE_BOTTOM(ItemID.EMISSARY_ROBE_BOTTOM),
    EMISSARY_SANDALS(ItemID.EMISSARY_SANDALS),
    MASK_OF_REBIRTH(ItemID.MASK_OF_REBIRTH),
    ANCIENT_CEREMONIAL_BOOTS(ItemID.ANCIENT_CEREMONIAL_BOOTS),
    ANCIENT_CEREMONIAL_GLOVES(ItemID.ANCIENT_CEREMONIAL_GLOVES),
    ANCIENT_CEREMONIAL_MASK(ItemID.ANCIENT_CEREMONIAL_MASK),
    ANCIENT_CEREMONIAL_LEGS(ItemID.ANCIENT_CEREMONIAL_LEGS),
    ANCIENT_CEREMONIAL_TOP(ItemID.ANCIENT_CEREMONIAL_TOP);


    private final int itemID;
    @Getter
    private final String location = "Magic Wardrobe";
    @Getter
    private final boolean isBis;

    MagicWardrobe(int itemID, boolean isBis) {
        this.itemID = itemID; this.isBis = isBis;
    }
    MagicWardrobe(int itemID) {
        this.itemID = itemID;
        this.isBis = false;
    }
}
